<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>